CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT (hexmap C)

ENABLE_TESTING()

INCLUDE_DIRECTORIES (${CMAKE_BINARY_DIR}/include)
INCLUDE_DIRECTORIES (${CJSON_INCLUDE_DIR})
INCLUDE_DIRECTORIES (${QUICKLIST_INCLUDE_DIR})
INCLUDE_DIRECTORIES (${CUTEST_INCLUDE_DIR})
INCLUDE_DIRECTORIES (${ATLANTIS_INCLUDE_DIR})

FIND_PACKAGE (Curses)

IF (CURSES_FOUND)
 INCLUDE_DIRECTORIES (${CURSES_INCLUDE_DIR})
 ADD_EXECUTABLE (hexmap hexmap.c fake_svc.c)
 TARGET_LINK_LIBRARIES(hexmap ${CJSON_LIBRARIES} ${CURSES_LIBRARIES} ${QUICKLIST_LIBRARIES})
 ADD_EXECUTABLE (curses_demo curses_demo.c )
 TARGET_LINK_LIBRARIES (curses_demo ${CURSES_LIBRARIES})
 IF (MSVC)
  MSVC_CRT_SECURE_NO_WARNINGS (hexmap curses_demo)
 ENDIF(MSVC)
ENDIF()

ADD_EXECUTABLE (test_service_fake service.test.c fake_svc.c)
TARGET_LINK_LIBRARIES (test_service_fake ${CUTEST_LIBRARIES} ${QUICKLIST_LIBRARIES})
ADD_TEST (service_fake test_service_fake)

ADD_EXECUTABLE (test_service_atlantis service.test.c atlantis_svc.c)
TARGET_LINK_LIBRARIES (test_service_atlantis
 ${CUTEST_LIBRARIES}
 ${ATLANTIS_LIBRARIES}
)
ADD_TEST (service_atlantis test_service_atlantis)

IF (MSVC)
 MSVC_CRT_SECURE_NO_WARNINGS (test_service_fake test_service_atlantis)
ENDIF (MSVC)
